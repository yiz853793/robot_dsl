(program, None, None)
  (function_def, None, main)
    (argument_list, None, None)
    (program, None, None)
      (assign, None, =)
        (ID, x, None)
        (NUMBER, 10, None)
      (assign, None, =)
        (ID, y, None)
        (NUMBER, 20, None)
      (assign, None, =)
        (ID, x, None)
        (expression, None, +)
          (ID, x, None)
          (ID, y, None)
      (assign, None, =)
        (ID, y, None)
        (expression, None, -)
          (ID, y, None)
          (NUMBER, 5, None)
      (assign, None, =)
        (ID, z, None)
        (term, None, *)
          (ID, x, None)
          (ID, y, None)
      (assign, None, =)
        (ID, a, None)
        (term, None, /)
          (ID, y, None)
          (ID, x, None)
      (assign, None, =)
        (ID, v, None)
        (expression, None, -)
          (expression, None, +)
            (ID, a, None)
            (term, None, *)
              (ID, b, None)
              (ID, c, None)
          (term, None, *)
            (term, None, /)
              (ID, d, None)
              (NUMBER, 2, None)
            (expression, None, +)
              (ID, a, None)
              (ID, b, None)
      (assign, None, =)
        (ID, w, None)
        (array, None, None)
          (argument_list, None, None)
            (NUMBER, 1, None)
            (NUMBER, 2, None)
            (ID, x, None)
            (ID, y, None)
      (assign, None, =)
        (array_item, w, None)
          (NUMBER, 3, None)
        (ID, u, None)
      (assign, None, =)
        (ID, x, None)
        (array_item, w, None)
          (NUMBER, 2, None)
      (assign, None, =)
        (ID, w, None)
        (term, None, *)
          (ID, w, None)
          (NUMBER, 2, None)
      (if, None, None)
        (boolterm, None, <)
          (ID, x, None)
          (ID, y, None)
        (program, None, None)
          (assign, None, =)
            (ID, x, None)
            (expression, None, +)
              (ID, x, None)
              (NUMBER, 1, None)
      (if, None, None)
        (boolterm, None, <=)
          (ID, x, None)
          (ID, y, None)
        (program, None, None)
          (assign, None, =)
            (ID, x, None)
            (expression, None, -)
              (ID, x, None)
              (NUMBER, 1, None)
        (program, None, None)
          (assign, None, =)
            (ID, b, None)
            (ID, c, None)
      (while, None, None)
        (boolterm, None, <)
          (ID, x, None)
          (NUMBER, 50, None)
        (program, None, None)
          (assign, None, =)
            (ID, x, None)
            (expression, None, +)
              (ID, x, None)
              (NUMBER, 1, None)
      (assign, None, =)
        (ID, result, None)
        (expression, None, +)
          (expression, None, +)
            (function_call, None, add)
              (argument_list, None, None)
                (ID, x, None)
                (ID, y, None)
            (ID, b, None)
          (ID, d, None)
      (return, None, None)
        (ID, result, None)
  (function_call, None, main)
    (argument_list, None, None)
  (function_def, None, add)
    (argument_list, None, None)
      (ID, a, None)
      (ID, b, None)
    (program, None, None)
      (return, None, None)
        (expression, None, +)
          (ID, a, None)
          (ID, b, None)
  (function_def, None, greet)
    (argument_list, None, None)
    (program, None, None)
      (assign, None, =)
        (ID, greeting, None)
        (STR, Hello, world!, None)
      (return, None, None)
        (ID, greeting, None)
  (assign, None, =)
    (ID, result, None)
    (function_call, None, add)
      (argument_list, None, None)
        (NUMBER, 3, None)
        (NUMBER, 4, None)
  (return, None, None)
    (ID, result, None)
